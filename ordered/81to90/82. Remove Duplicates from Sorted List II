Given a sorted linked list, delete all nodes that have duplicate numbers, leaving only distinct numbers from the original list.

Example 1:

Input: 1->2->3->3->4->4->5
Output: 1->2->5
Example 2:

Input: 1->1->1->2->3
Output: 2->3

比较简单，直接上代码
```
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        if(!head || !head->next)
            return head;
        ListNode* dummy = new ListNode(0);
        dummy->next = head;
        ListNode* p= head->next, *pre=head, *ppre = dummy;
        while(p){
            if(p->val == pre->val){
                pre= p;
                p=p->next;
            }
            else if(ppre->next != pre){
                ppre->next = p;
                pre =p;
                p= p->next;
            }
            else{
                ppre = pre;
                pre =p;
                p=p->next;
            }
        }
        if(ppre->next != pre)
            ppre->next =p;
        return dummy->next;
    }
};
```
