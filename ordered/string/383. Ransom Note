Given an arbitrary ransom note string and another string containing letters from all the magazines, write a function that will return true if the ransom note can be constructed from the magazines ; otherwise, it will return false.

Each letter in the magazine string can only be used once in your ransom note.

Note:
You may assume that both strings contain only lowercase letters.

canConstruct("a", "b") -> false
canConstruct("aa", "ab") -> false
canConstruct("aa", "aab") -> true

理解题意后即第一个字符串中所有字符出现数量小于第二个字符串中对应字符出现次数
      
class Solution:
    def canConstruct(self, ransomNote: str, magazine: str) -> bool:
        dic ={}
        for i in ransomNote:
            if i in dic:
                dic[i] +=1
            else:
                dic[i] =1
        for i in magazine:
            if i in dic:
                dic[i]-=1
        for i in dic.values():
            if i>0:
                return False
        
        return True
        
        
后面发现str有一个count函数，可以计算对应字符出现的次数        
class Solution:
    def canConstruct(self, ransomNote: str, magazine: str) -> bool:
        for i in set(ransomNote):
            if ransomNote.count(i) > magazine.count(i):
                return False
        return True
        
也可以使用collections.Counter
class Solution:
    def canConstruct(self, ransomNote: str, magazine: str) -> bool:
        return not collections.Counter(ransomNote) - collections.Counter(magazine)
        
