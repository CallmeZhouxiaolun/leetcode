
Given a matrix of m x n elements (m rows, n columns), return all elements of the matrix in spiral order.

Example 1:

Input:
[
 [ 1, 2, 3 ],
 [ 4, 5, 6 ],
 [ 7, 8, 9 ]
]
Output: [1,2,3,6,9,8,7,4,5]
Example 2:

Input:
[
  [1, 2, 3, 4],
  [5, 6, 7, 8],
  [9,10,11,12]
]
Output: [1,2,3,4,8,12,11,10,9,5,6,7]
题目描述：
就是按照顺序螺旋插入，主要是索引有点晕，画图慢慢写：
```
class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
        if(matrix.empty())
            return {};
        int m= matrix.size(), n =matrix[0].size();
        vector<int> res;
        int row_up=0, row_below= m-1, l=0, r=n-1;
        while(true){
            for(int j=l ;j <=r ; j++){
                res.push_back(matrix[row_up][j]);
            }
            if(++row_up > row_below) break;
            for(int j= row_up; j<= row_below; j++){
                res.push_back(matrix[j][r]);
            }
            if(--r <l) break;
            for(int j= r; j>=l; j--){
                res.push_back(matrix[row_below][j]);
            }
            if(--row_below < row_up) break;
            for(int j=row_below; j>= row_up; j--){
                res.push_back(matrix[j][l]);
            }
            if(++l > r) break;
        }
        return res;
    }
};

```


采用以上思想可以写python代码：
```
        
class Solution:
    def spiralOrder(self, matrix: List[List[int]]) -> List[int]:
        if not matrix or not matrix[0]:
            return []
        high, low, left, right  = 0, len(matrix)-1, 0, len(matrix[0])-1
        res =[]
        while True:
            for i in range(left, right+1):
                res.append(matrix[high][i])
            high +=1
            if high > low: break
            for i in range(high, low+1):
                res.append(matrix[i][right])
            right -=1
            if right < left: break
            for i in range(right, left-1, -1):
                res.append(matrix[low][i])
            low -=1
            if low < high: break
            for i in range(low, high-1, -1):
                res.append(matrix[i][left])
            left +=1
            if left > right: break
        return res
  ```
  显得比较臃肿，可以采用python list的特性
```
class Solution:
    def spiralOrder(self, matrix: List[List[int]]) -> List[int]:
        res =[]
        while matrix:
            res += matrix.pop(0)
            if matrix and matrix[0]:
                for row in matrix:
                    res.append(row.pop())
            if matrix and matrix[0]:
                res += matrix.pop()[::-1]
            if matrix and matrix[0]:
                for row in matrix[::-1]:
                    res.append(row.pop(0))
        return res
            
   ```
