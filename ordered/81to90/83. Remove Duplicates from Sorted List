Given a sorted linked list, delete all duplicates such that each element appear only once.

Example 1:

Input: 1->1->2
Output: 1->2
Example 2:

Input: 1->1->2->3->3
Output: 1->2->3

比较简单，直接上代码
```
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        if(!head || !head->next)
            return head;
        ListNode* p=head->next, *pre=head;
        while(p){
            if(p->val == pre->val){
                pre->next = p->next;
                p = pre->next;
            }
            else{
                pre = p;
                p = p->next;
            }
        }
        return head;
    }
};
```
