Given a positive integer n, generate a square matrix filled with elements from 1 to n2 in spiral order.

Example:

Input: 3
Output:
[
 [ 1, 2, 3 ],
 [ 8, 9, 4 ],
 [ 7, 6, 5 ]
]

这个题和之前的Spiral Matrix是一样的，这里不再多叙述
```
class Solution {
public:
    vector<vector<int>> generateMatrix(int n) {
        int value=1;
        int up_row =0, b_row =n-1, l =0, r=n-1;
        vector<vector<int>> res(n, vector<int>(n, 0));
        while(true){
            for(int i=l; i<=r ; i++)
                res[up_row][i] =value++;
            if(++up_row > b_row) break;
            for(int i = up_row; i<= b_row; i++)
                res[i][r] = value++;
            if(--r < l) break;
            for(int i= r; i>= l; i--)
                res[b_row][i] =value++;
            if(--b_row < up_row) break;
            for(int i=b_row; i>= up_row; i--)
                res[i][l] = value++;
            if(++l > r) break;
        }
        return res;
    }
};
```


python 版本

```
class Solution:
    def generateMatrix(self, n: int) -> List[List[int]]:
        if not n:
            return []
        high, low, left, right = 0, n-1, 0, n-1
        res = [[0 for j in range(n)] for i in range(n)]
        cur =1
        while True:
            for i in range(left, right+1):
                res[high][i] = cur
                cur+=1
            high+=1
            if high >low: break
            for i in range(high, low+1):
                res[i][right] = cur
                cur+=1
            right -=1
            if right < left: break
            for i in range(right, left-1, -1):
                res[low][i] =cur
                cur +=1
            low -=1
            if low < high: break
            for i in range(low, high-1, -1):
                res[i][left] = cur
                cur +=1
            left +=1
            if left > right: break
        return res
                
  ```
  
  
  ```
  class Solution:
    def generateMatrix(self, n: int) -> List[List[int]]:
        res = [[0]*n for _ in range(n)]
        i, j, di, dj=0, 0, 0,1
        for k in range(n*n):
            res[i][j] = k+1
            if res[(i+di)%n][(j+dj)%n]:
                di, dj = dj,-di
            i +=di
            j +=dj
```

